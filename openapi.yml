openapi: 3.0.0
info:
  title: kytos/topology
  version: v2
  description: Manage the network topology.
paths:
  /api/kytos/topology/v2/devices:
    get:
      summary: Return a json with all the devices in the topology.
      description: For now, a device can be a Switch or a Host.
      responses:
        200:  # You can add more responses
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"

  /api/kytos/topology/v2/links:
    get:
      summary: Return a json with all the links in the topology.
      description: Links are directed connections between devices.
      responses:
        200:  # You can add more responses
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    type: array
                    items:
                      $ref: "#/components/schemas/Link"
  /api/kytos/topology/v2:
    get:
      summary: Return the latest known topology.
      description: This topology is updated when there are network events.
      responses:
        200:  # You can add more responses
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  circuits:
                    type: array
                    items:
                      $ref: "#/components/schemas/Circuit"
                    example:
                      $ref: "#/definitions/examples/ListofCircuits"
                  devices:
                    $ref: "#/components/schemas/Device"
                  links:
                    type: array
                    items:
                      $ref: "#/components/schemas/Link"
# Components models here
components:
  schemas:
    Switch:
      type: object
      properties:
        id:
          type: string
          description: Switch identifier.
          example: 00:00:00:00:00:00:00:01
        name:
          type: string
          description: An alternative identifier, like an alias.
          example: my-beautiful-switch
        serial:
          type: string
          description: Display the serial number of switch
        software:
           type: string
           description: Describe the software version
           example: Version 2.3.4
        ofp_version:
           type: string
           description: Openflow version
           example: '0x01'
        connection:
           type: string
           description: Address used to communicate with the controller
           example: 127.0.0.1:49330
        data_path:
           type: string
           description: Datapath identifier
        manufacturer:
           type: string
           description: Manufacture name
           example: Unkown Manufactor
        hardware:
           type: string
           description: describe the Hardware version
           example: Hardware version 2.0
        type:
          type: string
          description: Display 'switch' as device type.
          example: switch
        interfaces:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/Interface'

    Host:
      type: object
      properties:
        type:
          type: string
          description: Display 'host' as device type.
          example: host
        mac:
          type: string
          description: Mac address of this host interface
          example: 36:87:18:7a:19:a5
    Interface:
        type: object
        properties:
          id:
            type: string
            description: Interface identification
            example: 00:00:00:00:00:00:00:01:1
          mac:
            type: string
            description: Interface mac address
            example: 26:fb:42:20:b8:b1
          name:
            type: string
            description: interface name
            example: s1-eth1
          nni:
            type: boolean
            description: Indicates if this is a Network-to-network interface
            example: false
          port_number:
            type: integer
            description: Port number on the switch
            example: 1
          speed:
            type: string
            description: The speed of this interface
            example: 10 Gbps
          switch:
            type: string
            description: The id of the switch that this interface belongs to
            example: 00:00:00:00:00:00:00:01
          type:
            type: string
            description: Indicates that this is an Interface
            enum: [interface]
            example: interface
          uni:
            type: boolean
            description: Indicates if this is a User-to-network interface
            example: true
    Link:
      type: object
      properties:
        a:
          type: string
          description: One of the link ends.
          example: 00:00:00:00:00:00:00:01:1
        b:
          type: string
          description: One of the link ends.
          example: 36:87:18:7a:19:a5
    Circuit:
      type: object
      properties:
        name:
          type: string
          description: The circuit name. Defined by the user.
          example: link-brazil-miami
        hops:
          type: array
          items:
            type: string
            description: Each endpoint that is part of the circuit
            example: 00:00:00:00:00:00:00:01:1
        custom_properties:
          type: object
          attributes:
            $ref: '#/components/schemas/CustomProperty'
          example:
            weight: 25
            cost: 0.3
    CustomProperty:
      type: object
      properties:
        custom_name:
          type: string
          description: Name of the property
        custom_value:
          description: Value of the property
    Device:
      type: object
      anyOf:
      - $ref: '#/components/schemas/Switch'
      - $ref: '#/components/schemas/Host'
      example:
        {
        "00:00:00:00:00:00:00:01": {
            "connection": "127.0.0.1:36918",
            "data_path": "",
            "dpid": "00:00:00:00:00:00:00:01",
            "hardware": "",
            "id": "00:00:00:00:00:00:00:01",
            "interfaces": {
                "00:00:00:00:00:00:00:01:1": {
                    "id": "00:00:00:00:00:00:00:01:1",
                    "mac": "26:fb:42:20:b8:b1",
                    "name": "s1-eth1",
                    "nni": false,
                    "port_number": 1,
                    "speed": "10 Gbps",
                    "switch": "00:00:00:00:00:00:00:01",
                    "type": "interface",
                    "uni": true
                },
                "00:00:00:00:00:00:00:01:2": {
                    "id": "00:00:00:00:00:00:00:01:2",
                    "mac": "de:19:a1:63:d1:5a",
                    "name": "s1-eth2",
                    "nni": true,
                    "port_number": 2,
                    "speed": "10 Gbps",
                    "switch": "00:00:00:00:00:00:00:01",
                    "type": "interface",
                    "uni": false
                },
                "00:00:00:00:00:00:00:01:65534": {
                    "id": "00:00:00:00:00:00:00:01:65534",
                    "mac": "9e:fb:8d:e0:c2:40",
                    "name": "s1",
                    "nni": false,
                    "port_number": 65534,
                    "speed": "",
                    "switch": "00:00:00:00:00:00:00:01",
                    "type": "interface",
                    "uni": true
                }
            },
            "manufacturer": "",
            "name": "00:00:00:00:00:00:00:01",
            "ofp_version": "0x01",
            "serial": "",
            "software": null,
            "type": "switch"
        },
        "00:00:00:00:00:01": {
            "mac": "00:00:00:00:00:01",
            "type": "host"
        }
      }

# Exemples here
definitions:
  examples:
    ListofCircuits:
      - {
          "name": "link-brazil-miami",
          "hops": [
              "1:1",
              "1:2",
              "2:1",
              "2:2"
              ]
        }
